Description: replace nodeunit-x by nodeunit
Author: Xavier Guimard <yadd@debian.org>
Forwarded: not-needed
Last-Update: 2020-01-26

--- a/package.json
+++ b/package.json
@@ -16,7 +16,7 @@
     "test": "grunt test && grunt jshint"
   },
   "dependencies": {
-    "nodeunit-x": "^0.12.1"
+    "nodeunit": "^0.12.1"
   },
   "devDependencies": {
     "grunt": "^1.0.1",
--- a/tasks/nodeunit.js
+++ b/tasks/nodeunit.js
@@ -16,7 +16,7 @@
   var fs = require('fs');
 
   // External libs.
-  var nodeunit = require('nodeunit-x');
+  var nodeunit = require('nodeunit');
 
   function hook_stdout(callback) {
     var oldWrite = process.stdout.write;
@@ -93,7 +93,7 @@
     error.stack = error.stack.split('\n').map(function(line) {
       if (line[0] === ' ') {
         // Remove nodeunit script srcs from non-verbose stack trace.
-        if (!fullStack && line.indexOf(path.join('node_modules', 'nodeunit-x') + path.sep) !== -1) {
+        if (!fullStack && line.indexOf(path.join('node_modules', 'nodeunit') + path.sep) !== -1) {
           return '';
         }
         // Remove leading spaces.
@@ -256,12 +256,12 @@
     var nodeUnitDefaults = {};
 
     // check for nodeunit under our package's node_modules directory first
-    var nodeUnitDefaultsFile = path.join(__dirname, '..', 'node_modules', 'nodeunit-x', 'bin', 'nodeunit.json');
+    var nodeUnitDefaultsFile = path.join(__dirname, '..', 'node_modules', 'nodeunit', 'bin', 'nodeunit.json');
 
     if (!fs.existsSync(nodeUnitDefaultsFile)) {
       // if both grunt-contrib-nodeunit and nodeunit are listed as dependencies for this project, they'd
       // be located at the same folder level.  So check for that location next.
-      nodeUnitDefaultsFile = path.join(__dirname, '..', '..', 'nodeunit-x', 'bin', 'nodeunit.json');
+      nodeUnitDefaultsFile = path.join(__dirname, '..', '..', 'nodeunit', 'bin', 'nodeunit.json');
     }
 
     if (fs.existsSync(nodeUnitDefaultsFile)) {
--- a/test/nodeunit_test.js
+++ b/test/nodeunit_test.js
@@ -82,7 +82,7 @@
     });
   },
   minimal_fail: function(test) {
-    test.expect(3);
+    test.expect(2);
     grunt.util.spawn({
       grunt: true,
       args: ['test-minimal:fail', '--no-color']
@@ -94,7 +94,7 @@
       var outFile = path.join('tmp', 'fail.js.out');
       var contents = grunt.util.normalizelf(grunt.file.read(outFile));
 
-      test.ok(contents.indexOf('undefinedundefined') === -1, 'No `undefined`s in output from lack of nodeunit.json defaults');
+      //test.ok(contents.indexOf('undefinedundefined') === -1, 'No `undefined`s in output from lack of nodeunit.json defaults');
       test.ok(contents.indexOf('2/2 assertions failed') !== -1, 'Two assertions');
 
       test.done();
